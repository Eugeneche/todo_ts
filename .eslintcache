[{"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\index.tsx":"1","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\reportWebVitals.ts":"2","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\App.tsx":"3","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItem.tsx":"4","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskForm.tsx":"5","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\taskReducer.ts":"6","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\BoardContainer.tsx":"7","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\Board.tsx":"8"},{"size":488,"mtime":1612654985806,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":248,"mtime":1613169349698,"results":"12","hashOfConfig":"10"},{"size":654,"mtime":1613080897294,"results":"13","hashOfConfig":"10"},{"size":717,"mtime":1613123003401,"results":"14","hashOfConfig":"10"},{"size":1432,"mtime":1613122893863,"results":"15","hashOfConfig":"10"},{"size":204,"mtime":1613168238712,"results":"16","hashOfConfig":"10"},{"size":498,"mtime":1613168384429,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"narbcv",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\index.tsx",[],["39","40"],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\reportWebVitals.ts",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\App.tsx",["41"],"import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport {Board} from './components/Board/Board'\nimport './App.css'\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItem.tsx",["42","43"],"import * as React from \"react\"\r\nimport * as ReactDOM from \"react-dom\"\r\nimport { useState } from \"react\"\r\nimport { TaskForm } from \"../TaskForm/TaskForm\"\r\n\r\n\r\ntype taskProps = {\r\n    text: string\r\n    isCompleted?: boolean\r\n    urgency: number\r\n  }\r\n\r\nexport const TaskItem = ({text, isCompleted, urgency}:taskProps) => {\r\n    const [mode, setMode] = useState(false)\r\n    return (\r\n        <div className=\"task-item\">\r\n            {mode === true ? <TaskForm /> :\r\n            <ul>\r\n                <li>{text}</li>\r\n                <li>{isCompleted}</li>\r\n                <li>{urgency}</li>\r\n            </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskForm.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\taskReducer.ts",[],["44","45"],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\BoardContainer.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\Board.tsx",["46","47","48"],"import * as React from 'react'\r\nimport {useState} from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport { TaskItem } from '../TaskItem/TaskItem'\r\nimport '../../App.css'\r\nimport add from '../../img/add.svg'\r\n\r\nexport const Board = () => {\r\n  return (\r\n    <div className=\"board board__main\">\r\n      <img src={add} className=\"board__add-img\" />\r\n      <header className=\"App-header\">\r\n       <h1>Todo List</h1>\r\n      </header>\r\n      <TaskItem text={'1'} urgency={1} />\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":13,"nodeType":"55","messageId":"56","endLine":2,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":2,"column":13,"nodeType":"55","messageId":"56","endLine":2,"endColumn":21},{"ruleId":"53","severity":1,"message":"57","line":14,"column":18,"nodeType":"55","messageId":"56","endLine":14,"endColumn":25},{"ruleId":"49","replacedBy":"58"},{"ruleId":"51","replacedBy":"59"},{"ruleId":"53","severity":1,"message":"60","line":2,"column":9,"nodeType":"55","messageId":"56","endLine":2,"endColumn":17},{"ruleId":"53","severity":1,"message":"54","line":3,"column":13,"nodeType":"55","messageId":"56","endLine":3,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":11,"column":7,"nodeType":"63","endLine":11,"endColumn":51},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'setMode' is assigned a value but never used.",["64"],["65"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]