[{"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\index.tsx":"1","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\reportWebVitals.ts":"2","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\App.tsx":"3","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItem.tsx":"4","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskForm.tsx":"5","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\BoardContainer.tsx":"6","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\Board.tsx":"7","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\redux-toolkit.ts":"8","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskFormContainer.tsx":"9","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModalContainer.tsx":"10","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModal.tsx":"11"},{"size":617,"mtime":1613335861595,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":248,"mtime":1613169349698,"results":"15","hashOfConfig":"13"},{"size":743,"mtime":1613256879978,"results":"16","hashOfConfig":"13"},{"size":719,"mtime":1613321879879,"results":"17","hashOfConfig":"13"},{"size":204,"mtime":1613168238712,"results":"18","hashOfConfig":"13"},{"size":843,"mtime":1613549222450,"results":"19","hashOfConfig":"13"},{"size":1667,"mtime":1613552331423,"results":"20","hashOfConfig":"13"},{"size":223,"mtime":1613406716841,"results":"21","hashOfConfig":"13"},{"size":281,"mtime":1613404610855,"results":"22","hashOfConfig":"13"},{"size":930,"mtime":1613552176197,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"narbcv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\index.tsx",[],["52","53"],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\reportWebVitals.ts",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\App.tsx",["54"],"import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport {Board} from './components/Board/Board'\nimport './App.css'\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItem.tsx",["55","56","57"],"import * as React from \"react\"\r\nimport * as ReactDOM from \"react-dom\"\r\nimport { useState } from \"react\"\r\nimport { TaskForm } from \"../TaskForm/TaskForm\"\r\nimport done from '../../img/done.svg'\r\nimport inProgress from '../../img/in_progress.svg'\r\n\r\n\r\ntype taskProps = {\r\n    text: string\r\n    isCompleted?: boolean\r\n    urgency: number\r\n  }\r\n\r\nexport const TaskItem = ({text, isCompleted, urgency}:taskProps) => {\r\n    const [mode, setMode] = useState(false)\r\n    return (\r\n        <div className=\"task-item\">\r\n            {mode === true ? <TaskForm /> :\r\n            <div className=\"task-item__status\"><img src={isCompleted ? done : inProgress}/></div>}\r\n            <div className=\"task-item__text\">{text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskForm.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\BoardContainer.tsx",[],["58","59"],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\Board.tsx",["60"],"import * as React from 'react'\r\nimport {useState} from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport { TaskItem } from '../TaskItem/TaskItem'\r\nimport CreatingModalContainer from '../CreatingModal/CreatingModalContainer'\r\nimport '../../App.css'\r\nimport add from '../../img/add.svg'\r\n\r\nexport const Board = () => {\r\n\r\n  const [mode, setMode] = useState(false)\r\n\r\n  return (\r\n    <div className=\"board board__main\">\r\n      {mode && <CreatingModalContainer />}     \r\n      <header className=\"board__header\">\r\n        <h1 className=\"board__title\">Todo List</h1>\r\n        <button className=\"board__add-btn\" onClick={() => setMode(true)}><img src={add} alt=\"add task button\"/></button>       \r\n      </header> \r\n      <div className=\"board__tasks\">\r\n        <TaskItem text={'Learn React'} urgency={1} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\redux-toolkit.ts",["61"],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskFormContainer.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModalContainer.tsx",["62","63"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CreatingModal } from './CreatingModal'\r\nimport { addTask } from '../../redux/redux-toolkit'\r\n\r\n\r\nconst mapDispatch = { addTask }\r\n\r\n\r\n\r\nexport default connect(null, mapDispatch)(CreatingModal)","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModal.tsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":13,"nodeType":"70","messageId":"71","endLine":2,"endColumn":21},{"ruleId":"68","severity":1,"message":"69","line":2,"column":13,"nodeType":"70","messageId":"71","endLine":2,"endColumn":21},{"ruleId":"68","severity":1,"message":"72","line":16,"column":18,"nodeType":"70","messageId":"71","endLine":16,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":20,"column":48,"nodeType":"75","endLine":20,"endColumn":92},{"ruleId":"64","replacedBy":"76"},{"ruleId":"66","replacedBy":"77"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":13,"nodeType":"70","messageId":"71","endLine":3,"endColumn":21},{"ruleId":"68","severity":1,"message":"78","line":22,"column":45,"nodeType":"70","messageId":"71","endLine":22,"endColumn":56},{"ruleId":"68","severity":1,"message":"79","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"80","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"@typescript-eslint/no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'setMode' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["81"],["82"],"'isCompleted' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]