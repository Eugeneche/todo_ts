[{"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\index.tsx":"1","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\reportWebVitals.ts":"2","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\App.tsx":"3","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItem.tsx":"4","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskForm.tsx":"5","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\BoardContainer.tsx":"6","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\redux-toolkit.ts":"7","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskFormContainer.tsx":"8","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModalContainer.tsx":"9","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModal.tsx":"10","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\index.js":"11","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItemContainer.tsx":"12","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\Board.tsx":"13"},{"size":619,"mtime":1613661895204,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":278,"mtime":1613834872534,"results":"17","hashOfConfig":"15"},{"size":408,"mtime":1613853909894,"results":"18","hashOfConfig":"15"},{"size":719,"mtime":1613321879879,"results":"19","hashOfConfig":"15"},{"size":329,"mtime":1613852967964,"results":"20","hashOfConfig":"15"},{"size":1792,"mtime":1613671924487,"results":"21","hashOfConfig":"15"},{"size":223,"mtime":1613406716841,"results":"22","hashOfConfig":"15"},{"size":240,"mtime":1613853939876,"results":"23","hashOfConfig":"15"},{"size":1046,"mtime":1613861007707,"results":"24","hashOfConfig":"15"},{"size":146,"mtime":1613321879731,"results":"25","hashOfConfig":"15"},{"size":345,"mtime":1613852759844,"results":"26","hashOfConfig":"15"},{"size":1396,"mtime":1613863344179,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"narbcv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\index.tsx",[],["58","59"],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\reportWebVitals.ts",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\App.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItem.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskForm.tsx",[],["60","61"],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\BoardContainer.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\redux-toolkit.ts",["62"],"import { createSlice, configureStore } from '@reduxjs/toolkit'\r\n\r\nexport type todo = {\r\n    id: string | null\r\n    created: string | null\r\n    updated: string | null\r\n    text: string | null\r\n    isCompleted: boolean\r\n    urgency: number | null\r\n  }\r\n\r\nlet initialState: Array<todo> = []\r\n\r\nlet nextTodoId = 0\r\n\r\nconst tasksSlice = createSlice({\r\n  name: 'todos',\r\n  initialState: initialState,\r\n  reducers: {\r\n    addTask: {\r\n      reducer(state, action) {\r\n        const { id, created, updated, text, isCompleted, urgency }: todo = action.payload\r\n        state.push({ id, created, updated, text, isCompleted: false, urgency })\r\n      },\r\n      prepare(text): any {\r\n        //is id really string? -- check!\r\n        return {payload: {text, id: (nextTodoId++).toString()}}\r\n      }\r\n    },\r\n    updateTask(state, action) {\r\n      const todo = state.find(todo => todo.id === action.payload)\r\n      if (todo) {\r\n        todo.isCompleted = !todo.isCompleted\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n//export default tasksSlice.reducer\r\nexport const { addTask, updateTask } = tasksSlice.actions\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    addTask: tasksSlice.reducer\r\n  },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\n\r\n/* export const taskReducer = (state:initialStateType = initialState, action: createNewTaskActionType):initialStateType => {\r\n    return initialState;\r\n}\r\n\r\ntype createNewTaskActionType = {\r\n    type: typeof CREATE_NEW_TASK\r\n    text: string\r\n    isCompleted: boolean\r\n    urgency: number\r\n}\r\n\r\nexport const createNewTask = (text: string, isCompleted: boolean, urgency: number):createNewTaskActionType => {\r\n    return {\r\n        type: CREATE_NEW_TASK,\r\n        text: text,\r\n        isCompleted: isCompleted,\r\n        urgency: urgency,\r\n    }\r\n} */","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskFormContainer.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModalContainer.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModal.tsx",[],["63","64"],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\index.js",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItemContainer.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\Board.tsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":22,"column":45,"nodeType":"73","messageId":"74","endLine":22,"endColumn":56},{"ruleId":"65","replacedBy":"75"},{"ruleId":"67","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],"@typescript-eslint/no-unused-vars","'isCompleted' is assigned a value but never used.","Identifier","unusedVar",["77"],["78"],"no-global-assign","no-unsafe-negation"]