[{"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\index.tsx":"1","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\reportWebVitals.ts":"2","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\App.tsx":"3","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItem.tsx":"4","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskForm.tsx":"5","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\BoardContainer.tsx":"6","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\redux-toolkit.ts":"7","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskFormContainer.tsx":"8","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModalContainer.tsx":"9","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModal.tsx":"10","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\index.js":"11","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItemContainer.tsx":"12","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\Board.tsx":"13"},{"size":619,"mtime":1613661895204,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":278,"mtime":1613834872534,"results":"17","hashOfConfig":"15"},{"size":520,"mtime":1613842255774,"results":"18","hashOfConfig":"15"},{"size":719,"mtime":1613321879879,"results":"19","hashOfConfig":"15"},{"size":402,"mtime":1613840811414,"results":"20","hashOfConfig":"15"},{"size":1792,"mtime":1613671924487,"results":"21","hashOfConfig":"15"},{"size":223,"mtime":1613406716841,"results":"22","hashOfConfig":"15"},{"size":281,"mtime":1613404610855,"results":"23","hashOfConfig":"15"},{"size":930,"mtime":1613552176197,"results":"24","hashOfConfig":"15"},{"size":146,"mtime":1613321879731,"results":"25","hashOfConfig":"15"},{"size":424,"mtime":1613845211792,"results":"26","hashOfConfig":"15"},{"size":1207,"mtime":1613850516301,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"narbcv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\index.tsx",[],["60","61"],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\reportWebVitals.ts",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\App.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItem.tsx",["62"],"import * as React from \"react\"\r\nimport done from '../../img/done.svg'\r\nimport inProgress from '../../img/in_progress.svg'\r\n\r\n\r\n/* type taskProps = {\r\n    text: string\r\n    isCompleted?: boolean\r\n    urgency: number\r\n  } */\r\n\r\nexport const TaskItem = (props: any) => {\r\n    return (\r\n        <div className=\"task-item\">\r\n            <div className=\"task-item__status\"><img src={props.isCompleted ? done : inProgress}/></div>\r\n            <div className=\"task-item__text\">{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskForm.tsx",[],["63","64"],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\BoardContainer.tsx",["65"],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\redux-toolkit.ts",["66"],"import { createSlice, configureStore } from '@reduxjs/toolkit'\r\n\r\nexport type todo = {\r\n    id: string | null\r\n    created: string | null\r\n    updated: string | null\r\n    text: string | null\r\n    isCompleted: boolean\r\n    urgency: number | null\r\n  }\r\n\r\nlet initialState: Array<todo> = []\r\n\r\nlet nextTodoId = 0\r\n\r\nconst tasksSlice = createSlice({\r\n  name: 'todos',\r\n  initialState: initialState,\r\n  reducers: {\r\n    addTask: {\r\n      reducer(state, action) {\r\n        const { id, created, updated, text, isCompleted, urgency }: todo = action.payload\r\n        state.push({ id, created, updated, text, isCompleted: false, urgency })\r\n      },\r\n      prepare(text): any {\r\n        //is id really string? -- check!\r\n        return {payload: {text, id: (nextTodoId++).toString()}}\r\n      }\r\n    },\r\n    updateTask(state, action) {\r\n      const todo = state.find(todo => todo.id === action.payload)\r\n      if (todo) {\r\n        todo.isCompleted = !todo.isCompleted\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n//export default tasksSlice.reducer\r\nexport const { addTask, updateTask } = tasksSlice.actions\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    addTask: tasksSlice.reducer\r\n  },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\n\r\n/* export const taskReducer = (state:initialStateType = initialState, action: createNewTaskActionType):initialStateType => {\r\n    return initialState;\r\n}\r\n\r\ntype createNewTaskActionType = {\r\n    type: typeof CREATE_NEW_TASK\r\n    text: string\r\n    isCompleted: boolean\r\n    urgency: number\r\n}\r\n\r\nexport const createNewTask = (text: string, isCompleted: boolean, urgency: number):createNewTaskActionType => {\r\n    return {\r\n        type: CREATE_NEW_TASK,\r\n        text: text,\r\n        isCompleted: isCompleted,\r\n        urgency: urgency,\r\n    }\r\n} */","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskForm\\TaskFormContainer.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModalContainer.tsx",["67","68"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CreatingModal } from './CreatingModal'\r\nimport { addTask } from '../../redux/redux-toolkit'\r\n\r\n\r\nconst mapDispatch = { addTask }\r\n\r\n\r\n\r\nexport default connect(null, mapDispatch)(CreatingModal)","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\CreatingModal\\CreatingModal.tsx",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\redux\\index.js",[],"D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\TaskItem\\TaskItemContainer.tsx",["69"],"import { connect } from 'react-redux'\r\nimport { TaskItem } from './TaskItem'\r\nimport { addTask, RootState, todo } from '../../redux/redux-toolkit'\r\n\r\n/* type propsType = {\r\n    tasks: Array<todo>\r\n    addTask: any\r\n  } */\r\n\r\nconst mapDispatch = { addTask }\r\nconst mapStateToProps = (state: RootState) => ({\r\n    tasks: state.addTask\r\n})\r\n\r\nexport const TaskItemContainer = connect(mapStateToProps, mapDispatch)(TaskItem)\r\n\r\n","D:\\Work\\ROI Hunter\\todo_app\\todo_ts\\src\\components\\Board\\Board.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":15,"column":48,"nodeType":"76","endLine":15,"endColumn":98},{"ruleId":"70","replacedBy":"77"},{"ruleId":"72","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":6,"nodeType":"81","messageId":"82","endLine":5,"endColumn":15},{"ruleId":"79","severity":1,"message":"83","line":22,"column":45,"nodeType":"81","messageId":"82","endLine":22,"endColumn":56},{"ruleId":"79","severity":1,"message":"84","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"79","severity":1,"message":"85","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"86","line":3,"column":30,"nodeType":"81","messageId":"82","endLine":3,"endColumn":34},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["87"],["88"],"@typescript-eslint/no-unused-vars","'propsType' is defined but never used.","Identifier","unusedVar","'isCompleted' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","'todo' is defined but never used.","no-global-assign","no-unsafe-negation"]